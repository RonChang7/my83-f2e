kind: pipeline
name: default

steps:

  - name: build-app
    image: node:14-alpine
    volumes:
      - name: node_modules
        path: /drone/src/app/node_modules
    user: root
    commands:
      - cd app
      - npm install
      - npm run build
    when:
      branch: master
      event: push

  - name: create-sentry-release
    image: getsentry/sentry-cli:1.74.5
    environment:
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_ORG: upn-1r
      SENTRY_PROJECT: my83-front
    commands:
      - sentry-cli releases new $${DRONE_COMMIT_SHA}
      - sentry-cli releases set-commits $${DRONE_COMMIT_SHA} --commit UPN-TW/my83-f2e@$${DRONE_COMMIT_SHA}
      - sentry-cli releases files $${DRONE_COMMIT_SHA} upload-sourcemaps --url-prefix '~/_nuxt/' ./app/.nuxt/dist/client/
    depends_on:
      - build-app
    when:
      branch: master
      event: push

  - name: remove-source-map
    image: node:14-alpine
    user: root
    commands:
      - cd app
      - rm ./.nuxt/dist/client/*.js.map
    depends_on:
      - create-sentry-release
    when:
      branch: master
      event: push

  - name: remove-devDependencies
    image: node:14-alpine
    user: root
    commands:
      - cd app
      - npm prune --production
    depends_on:
      - remove-source-map
    when:
      branch: master
      event: push

  - name: push-image
    image: plugins/gcr
    settings:
      registry: asia.gcr.io
      repo: my83-253509/my83-f2e
      json_key:
        from_secret: GCR_AUTH_KEY
      tags:
        - ${DRONE_COMMIT_SHA}
      dockerfile: ./docker/front-app-prod/Dockerfile
      context: ./app
      cache_from: node:14-alpine
    depends_on:
      - remove-devDependencies
    when:
      branch: master
      event: push

  - name: deploy-staging
    image: nixery.dev/kubectl/bash/gnused
    volumes:
      - name: secret
        path: /drone-secret
    environment:
      K8S_SERVER:
        from_secret: K8S_SERVER
      K8S_TOKEN:
        from_secret: K8S_TOKEN
    commands:
      # 設定 k8s context
      - kubectl config set-cluster main-cluster --server=$${K8S_SERVER} --insecure-skip-tls-verify=true
      - kubectl config set-credentials deploy-account --token=$${K8S_TOKEN}
      - kubectl config set-context default-context --cluster=main-cluster --user=deploy-account --namespace=my83-f2e
      - kubectl config use-context default-context
      # 更新 env secret
      - kubectl -n my83-f2e create secret generic my83-f2e-app-env-staging --from-env-file=/drone-secret/env.staging --dry-run -o yaml | kubectl apply -f -
      # 用 yaml 部署
      - cd kubernetes/
      - sed -i "s/FRONT_APP_IMAGE_TAG/$${DRONE_COMMIT_SHA}/" ./staging.yaml
      - kubectl apply -f ./staging.yaml
    depends_on:
      - push-image
    when:
      branch: master
      event: push

  - name: tagged-image
    image: plugins/docker
    privileged: true
    environment:
      GCR_HOST: asia.gcr.io
      GCR_REPO: my83-253509/my83-f2e
      GCR_AUTH_KEY:
        from_secret: GCR_AUTH_KEY
    commands:
      - nohup dockerd &
      - echo $${GCR_AUTH_KEY} | docker login -u _json_key --password-stdin https://$${GCR_HOST}
      - docker pull $${GCR_HOST}/$${GCR_REPO}:$${DRONE_COMMIT_SHA}
      - docker tag $${GCR_HOST}/$${GCR_REPO}:$${DRONE_COMMIT_SHA} $${GCR_HOST}/$${GCR_REPO}:$${DRONE_TAG}
      - docker push $${GCR_HOST}/$${GCR_REPO}:$${DRONE_TAG}
    when:
      branch: master
      ref:
        - refs/tags/v*
      event: tag

  - name: deploy-production
    image: nixery.dev/kubectl/bash/gnused
    volumes:
      - name: secret
        path: /drone-secret
    environment:
      K8S_SERVER:
        from_secret: K8S_SERVER
      K8S_TOKEN:
        from_secret: K8S_TOKEN
    commands:
      # 設定 k8s context
      - kubectl config set-cluster main-cluster --server=$${K8S_SERVER} --insecure-skip-tls-verify=true
      - kubectl config set-credentials deploy-account --token=$${K8S_TOKEN}
      - kubectl config set-context default-context --cluster=main-cluster --user=deploy-account --namespace=my83-f2e
      - kubectl config use-context default-context
      # 更新 env secret
      - kubectl -n my83-f2e create secret generic my83-f2e-app-env-prod --from-env-file=/drone-secret/env.production --dry-run -o yaml | kubectl apply -f -
      # 用 yaml 部署
      - cd kubernetes
      - sed -i "s/FRONT_APP_IMAGE_TAG/$${DRONE_TAG}/" ./prod.yaml
      - kubectl apply -f ./prod.yaml
    depends_on:
      - tagged-image
    when:
      branch: master
      ref:
        - refs/tags/v*
      event: tag

  - name: create-sentry-deploy
    image: getsentry/sentry-cli:1.74.5
    environment:
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_ORG: upn-1r
      SENTRY_PROJECT: my83-front
    commands:
      - sentry-cli releases finalize $${DRONE_COMMIT_SHA}
      - sentry-cli releases deploys $${DRONE_COMMIT_SHA} new -e "production"
    depends_on:
      - deploy-production
    when:
      branch: master
      ref:
        - refs/tags/v*
      event: tag

volumes:
  - name: node_modules
    host:
      path: /tmp/drone-cache/${DRONE_REPO_NAME}/node_modules
  - name: secret
    host:
      path: /home/drone/secret/my83/my83-f2e

trigger:
  branch:
    - master
